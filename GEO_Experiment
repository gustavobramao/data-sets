library(ggplot2)
library(RGoogleAnalytics)
library(scales)

oauth_token <- Auth(client.id = "611777209411-1hmrctituiru63li4hs9421s7nu40vhu.apps.googleusercontent.com", client.secret = "xQwzjzuo9VLMRjB9cRTfrQ1u")
ValidateToken(oauth_token)

ValidateToken(oauth_token)

#Extract data from GA API

query.list <- Init(start.date = "2018-05-01",
                   end.date = "2018-06-01",
                   dimensions = "ga:city,ga:date",
                   metrics = "ga:sessions",
                   max.results = 10000,
                   sort = "ga:date",
                   table.id = "ga:108643487")

ga.query <- QueryBuilder(query.list)
cities <- GetReportData(ga.query, oauth_token, split_daywise = T)


#Clustering with K means

Control <- subset(France_reduced_clusters, cluster ==1)
Test <- subset(France_reduced_clusters, cluster ==2)


control.sessions <- subset(cities, city == "Amiens" 
                           | city == "Dijon"
                           | city == "Besancon"
                           | city == "Lille"
                           | city == "Nancy"
                           | city == "Paris"
                           | city == "Reims"
                           | city == "Strasbourg")

final.control <- aggregate(control.sessions$sessions, by=list(date=control.sessions$date), FUN=sum)
colnames(final.control) <- c("date", "control_sessions")


test.sessions <- subset(cities, city == "Aix-en-Provence" 
                        | city == "Angers"
                        | city == "Bordeaux"
                        | city == "Brest"
                        | city == "Caen"
                        | city == "Clermont-Ferrand"
                        | city == "Grenoble"
                        | city == "Le Mans"
                        | city == "Limoges"
                        | city == "Lyon"
                        | city == "Marseille"
                        | city == "Montpellier"
                        | city == "Nantes"
                        | city == "Nice"
                        | city == "Nimes"
                        | city == "Orleans"
                        | city == "Poitiers"
                        | city == "Rennes"
                        | city == "Rouen"
                        | city == "Saint-Etienne"
                        | city == "Toulouse"
                        | city == "Tours")

final.sessions <- aggregate(test.sessions$sessions, by=list(date=test.sessions$date), FUN=sum)
colnames(final.sessions) <- c("date", "test_sessions")

# build the data frame to perform regression

data.f <- cbind.data.frame(final.control$date, final.control$control_sessions, final.sessions$test_sessions)
colnames(data.f) <- c("date", "control", "test")

# Start modelling using causal impact

library(CausalImpact)
attach(data.f)

time.points <- seq.Date(as.Date("2018-05-01"), by = 1, length.out = 32)
data <- zoo(cbind(test, control), time.points)

head(data)

# Train the model and estimate the counterfactual.

pre.period <- as.Date(c("2018-05-01", "2018-05-15"))

# verify the model accuracy

post.period <- as.Date(c("2018-05-16", "2018-06-01"))

impact <- CausalImpact(data, pre.period, post.period, model.args = list(nseasons = 7, season.duration = 1, standardize.data = TRUE, prior.level.sd =1907))
plot(impact)

#Posterior inference {CausalImpact}

summary(impact, "report")
summary(impact)



impact$summary



write.csv(data.f, file="data.f.csv")
